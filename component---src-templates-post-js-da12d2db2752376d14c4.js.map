{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./src/components/seo.js"],"names":["BlogPost","render","post","this","props","data","allMysqlMessages","nodes","pageContext","next","prev","console","log","video","temp","body","replace","next_html","fields","slug","prev_html","title","subject","className","dangerouslySetInnerHTML","__html","class","to","role","aria-label","rel","React","Component","query","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"yQAMqBA,E,gLAEjBC,OAAA,WACI,IACMC,EADQC,KAAKC,MAAMC,KAAKC,iBACXC,MAAM,GAFpB,EAGkBJ,KAAKC,MAAMI,YAA1BC,EAHH,EAGGA,KAAMC,EAHT,EAGSA,KACdC,QAAQC,IAAIT,KAAKC,MAAMI,aACvB,IACMK,EAAQ,kNAmBRC,EApBSZ,EAAKa,KAGDC,QAAQ,sEAAsEH,GACzEG,QAAQ,mCAFlB,oCAIUA,QAAQ,iCAAiC,MAE7CA,QAAQ,oCAAoC,MAIvCA,QAAQ,wEAAwEH,GAEnFG,QAAQ,8BAA8B,MAE7CA,QAAQ,0BAA0B,MAEnCA,QAAQ,8BAA8B,IAEnCA,QAAQ,kCAAkC,MAIrDC,IAAaR,GAAMA,EAAKS,OAAOC,KAAKH,QAAQ,cAAc,KAC1DI,IAAaV,GAAMA,EAAKQ,OAAOC,KAAKH,QAAQ,cAAc,KAChE,OACI,YAAC,IAAD,KACA,YAAC,IAAD,CAAKK,MAAOnB,EAAKoB,UACjB,mBAAKC,UAAU,WACb,mBAAKA,UAAU,aACf,kBAAKC,wBAAyB,CAAEC,OAAQvB,EAAKoB,WAC7C,mBAAKI,MAAM,mBACT,oBAAMA,MAAM,OAAZ,eACA,oBAAMA,MAAM,kBAAiB,YAAC,OAAD,CAAMC,GAAE,YAAR,UAE/B,mBAAMH,wBAAyB,CAAEC,OAAQX,KAEzC,mBAAKS,UAAU,8BAA8BK,KAAK,aAAaC,aAAW,cAE3EnB,GACD,YAAC,OAAD,CAAMa,UAAU,kBAAkBI,GAAE,IAAMjB,EAAKQ,OAAOC,KAAQW,IAAI,QAC9DV,EACD,wCAGFX,GACG,YAAC,OAAD,CAAMc,UAAU,kBAAkBI,GAAE,IAAMlB,EAAKS,OAAOC,KAAQW,IAAI,QACjEb,EACD,wC,GAxDsBc,IAAMC,WAoE/BC,EAAK,c,uZC9DlB,SAASC,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMhB,EAAS,EAATA,MAC9BiB,EADuC,OACvCA,KAcFC,EAAkBJ,GAAeG,EAAKE,aAAaL,YAEzD,OACE,YAAC,IAAD,CACEM,eAAgB,CACdL,QAEFf,MAAOA,EACPqB,cAAa,QAAUJ,EAAKE,aAAanB,MACzCgB,KAAM,CACJ,CACEM,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASvB,GAEX,CACEwB,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASN,EAAKE,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASvB,GAEX,CACEsB,KAAK,sBACLC,QAASL,IAEXQ,OAAOV,KAKfH,EAAIc,aAAe,CACjBZ,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD","file":"component---src-templates-post-js-da12d2db2752376d14c4.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\n import SEO from \"../components/seo\"\r\nimport { Link } from \"gatsby\"\r\n//const natural =require(`../../node_modules/natural`)\r\nexport default class BlogPost extends React.Component  {\r\n    \r\n    render() {\r\n        const posts = this.props.data.allMysqlMessages\r\n        const post = posts.nodes[0] \r\n        const { next, prev } = this.props.pageContext\r\n        console.log(this.props.pageContext);\r\n        const parse =  post.body\r\n        const video = '<br><figure class=\"image is-16by9\"><iframe  class=\"has-ratio\" frameborder=\"0\" width=\"640\" height=\"360\" src=\"https://www.dailymotion.com/embed/video/$2\" allowfullscreen allow=\"autoplay\"></iframe></figure><br>'\r\n        const color = '<span style=\"color:$1\">$2</span>'\r\n        const body = parse.replace(/(\\[url=http.?:\\/\\/.+?dailymotion.com\\/swf\\/(.*?)\\](.*?)\\[\\/url\\])/gm,video);  \r\n        const color_body = body.replace(/\\[color=(.*?)\\](.*?)\\[\\/color]/gm,color);\r\n        //remove size \r\n        const size = color_body.replace(/\\[size=(.*?)\\](.*?)\\[\\/size]/gm,\"$2\");\r\n        //remove center \r\n        const center = size.replace(/\\[center(.*?)\\](.*?)\\[\\/center]/gm,\"$2\");\r\n        //\r\n   \r\n        //video\r\n        const final_vid = center.replace(/(\\[url=http.?:\\/\\/.+?dailymotion.com\\/video\\/(.*?)\\](.*?)\\[\\/url\\])/gm,video);\r\n        //remove link \r\n       const link = final_vid.replace(/\\[url(.*?)\\](.*?)\\[\\/url]/gm,\"$2\");\r\n        //remove i \r\n        const i = link.replace(/\\[i(.*?)\\](.*?)\\[\\/i]/gm,\"$2\");\r\n        //remove img\r\n        const img = i.replace(/\\[img(.*?)\\](.*?)\\[\\/img]/gm,\"\");\r\n        //remove color\r\n        const temp = img.replace(/\\[color(.*?)\\](.*?)\\[\\/color]/gm,\"$2\");\r\n\r\n       \r\n\r\n        const next_html =  next? next.fields.slug.replace(/(-)|(\\d+)/gm,\" \"): false;\r\n        const prev_html =  prev? prev.fields.slug.replace(/(-)|(\\d+)/gm,\" \"): false;\r\n        return (\r\n            <Layout>\r\n            <SEO title={post.subject} />\r\n            <div className=\"section\">\r\n              <div className=\"container\">\r\n              <h2  dangerouslySetInnerHTML={{ __html: post.subject }}/> \r\n              <div class=\"tags has-addons\">\r\n                <span class=\"tag\">Más Fandubs</span>\r\n                <span class=\"tag is-primary\"><Link to={`/fandubs`}>Home</Link></span>\r\n              </div>\r\n              <div  dangerouslySetInnerHTML={{ __html: temp }}/> \r\n             \r\n              <nav className=\"pagination is-rounded m-t-3\" role=\"navigation\" aria-label=\"pagination\">\r\n           \r\n            {prev && (\r\n            <Link className=\"pagination-prev\" to={`/${prev.fields.slug}`} rel=\"prev\">\r\n               {prev_html}\r\n               <span> ← Previous</span>\r\n            </Link>\r\n            )}\r\n            {next && (\r\n                <Link className=\"pagination-next\" to={`/${next.fields.slug}`} rel=\"next\">\r\n                {next_html}\r\n                <span>Next →</span>\r\n                </Link>\r\n              )}\r\n\r\n             \r\n             </nav>\r\n              </div>\r\n            </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n\r\n    allMysqlMessages(\r\n        filter: {fields: {slug: {eq: $slug }}}\r\n        ) { \r\n            nodes {\r\n                subject\r\n                poster_name\r\n                body\r\n              }\r\n            \r\n      }\r\n  }\r\n`","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}